// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package topholdersv1

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryTopHoldersRequest            protoreflect.MessageDescriptor
	fd_QueryTopHoldersRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_topholders_v1_query_proto_init()
	md_QueryTopHoldersRequest = File_topholders_v1_query_proto.Messages().ByName("QueryTopHoldersRequest")
	fd_QueryTopHoldersRequest_pagination = md_QueryTopHoldersRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryTopHoldersRequest)(nil)

type fastReflection_QueryTopHoldersRequest QueryTopHoldersRequest

func (x *QueryTopHoldersRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTopHoldersRequest)(x)
}

func (x *QueryTopHoldersRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_topholders_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTopHoldersRequest_messageType fastReflection_QueryTopHoldersRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTopHoldersRequest_messageType{}

type fastReflection_QueryTopHoldersRequest_messageType struct{}

func (x fastReflection_QueryTopHoldersRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTopHoldersRequest)(nil)
}
func (x fastReflection_QueryTopHoldersRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTopHoldersRequest)
}
func (x fastReflection_QueryTopHoldersRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTopHoldersRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTopHoldersRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTopHoldersRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTopHoldersRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTopHoldersRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTopHoldersRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTopHoldersRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTopHoldersRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTopHoldersRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTopHoldersRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryTopHoldersRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTopHoldersRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTopHoldersRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTopHoldersRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTopHoldersRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in topholders.v1.QueryTopHoldersRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTopHoldersRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTopHoldersRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTopHoldersRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTopHoldersRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTopHoldersRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTopHoldersRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTopHoldersRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTopHoldersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryTopHoldersResponse_1_list)(nil)

type _QueryTopHoldersResponse_1_list struct {
	list *[]*HolderInfo
}

func (x *_QueryTopHoldersResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryTopHoldersResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryTopHoldersResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HolderInfo)
	(*x.list)[i] = concreteValue
}

func (x *_QueryTopHoldersResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*HolderInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryTopHoldersResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(HolderInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTopHoldersResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryTopHoldersResponse_1_list) NewElement() protoreflect.Value {
	v := new(HolderInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryTopHoldersResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryTopHoldersResponse              protoreflect.MessageDescriptor
	fd_QueryTopHoldersResponse_holders      protoreflect.FieldDescriptor
	fd_QueryTopHoldersResponse_pagination   protoreflect.FieldDescriptor
	fd_QueryTopHoldersResponse_last_updated protoreflect.FieldDescriptor
	fd_QueryTopHoldersResponse_block_height protoreflect.FieldDescriptor
	fd_QueryTopHoldersResponse_total_count  protoreflect.FieldDescriptor
)

func init() {
	file_topholders_v1_query_proto_init()
	md_QueryTopHoldersResponse = File_topholders_v1_query_proto.Messages().ByName("QueryTopHoldersResponse")
	fd_QueryTopHoldersResponse_holders = md_QueryTopHoldersResponse.Fields().ByName("holders")
	fd_QueryTopHoldersResponse_pagination = md_QueryTopHoldersResponse.Fields().ByName("pagination")
	fd_QueryTopHoldersResponse_last_updated = md_QueryTopHoldersResponse.Fields().ByName("last_updated")
	fd_QueryTopHoldersResponse_block_height = md_QueryTopHoldersResponse.Fields().ByName("block_height")
	fd_QueryTopHoldersResponse_total_count = md_QueryTopHoldersResponse.Fields().ByName("total_count")
}

var _ protoreflect.Message = (*fastReflection_QueryTopHoldersResponse)(nil)

type fastReflection_QueryTopHoldersResponse QueryTopHoldersResponse

func (x *QueryTopHoldersResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTopHoldersResponse)(x)
}

func (x *QueryTopHoldersResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_topholders_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTopHoldersResponse_messageType fastReflection_QueryTopHoldersResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryTopHoldersResponse_messageType{}

type fastReflection_QueryTopHoldersResponse_messageType struct{}

func (x fastReflection_QueryTopHoldersResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTopHoldersResponse)(nil)
}
func (x fastReflection_QueryTopHoldersResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTopHoldersResponse)
}
func (x fastReflection_QueryTopHoldersResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTopHoldersResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTopHoldersResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTopHoldersResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTopHoldersResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryTopHoldersResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTopHoldersResponse) New() protoreflect.Message {
	return new(fastReflection_QueryTopHoldersResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTopHoldersResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryTopHoldersResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTopHoldersResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Holders) != 0 {
		value := protoreflect.ValueOfList(&_QueryTopHoldersResponse_1_list{list: &x.Holders})
		if !f(fd_QueryTopHoldersResponse_holders, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryTopHoldersResponse_pagination, value) {
			return
		}
	}
	if x.LastUpdated != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastUpdated)
		if !f(fd_QueryTopHoldersResponse_last_updated, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_QueryTopHoldersResponse_block_height, value) {
			return
		}
	}
	if x.TotalCount != uint32(0) {
		value := protoreflect.ValueOfUint32(x.TotalCount)
		if !f(fd_QueryTopHoldersResponse_total_count, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTopHoldersResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		return len(x.Holders) != 0
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		return x.Pagination != nil
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		return x.LastUpdated != int64(0)
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		return x.BlockHeight != int64(0)
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		return x.TotalCount != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		x.Holders = nil
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		x.Pagination = nil
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		x.LastUpdated = int64(0)
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		x.BlockHeight = int64(0)
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		x.TotalCount = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTopHoldersResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		if len(x.Holders) == 0 {
			return protoreflect.ValueOfList(&_QueryTopHoldersResponse_1_list{})
		}
		listValue := &_QueryTopHoldersResponse_1_list{list: &x.Holders}
		return protoreflect.ValueOfList(listValue)
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		value := x.LastUpdated
		return protoreflect.ValueOfInt64(value)
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		value := x.TotalCount
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		lv := value.List()
		clv := lv.(*_QueryTopHoldersResponse_1_list)
		x.Holders = *clv.list
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		x.LastUpdated = value.Int()
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		x.BlockHeight = value.Int()
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		x.TotalCount = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		if x.Holders == nil {
			x.Holders = []*HolderInfo{}
		}
		value := &_QueryTopHoldersResponse_1_list{list: &x.Holders}
		return protoreflect.ValueOfList(value)
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		panic(fmt.Errorf("field last_updated of message topholders.v1.QueryTopHoldersResponse is not mutable"))
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		panic(fmt.Errorf("field block_height of message topholders.v1.QueryTopHoldersResponse is not mutable"))
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		panic(fmt.Errorf("field total_count of message topholders.v1.QueryTopHoldersResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTopHoldersResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryTopHoldersResponse.holders":
		list := []*HolderInfo{}
		return protoreflect.ValueOfList(&_QueryTopHoldersResponse_1_list{list: &list})
	case "topholders.v1.QueryTopHoldersResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "topholders.v1.QueryTopHoldersResponse.last_updated":
		return protoreflect.ValueOfInt64(int64(0))
	case "topholders.v1.QueryTopHoldersResponse.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "topholders.v1.QueryTopHoldersResponse.total_count":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryTopHoldersResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryTopHoldersResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTopHoldersResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in topholders.v1.QueryTopHoldersResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTopHoldersResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTopHoldersResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTopHoldersResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTopHoldersResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTopHoldersResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Holders) > 0 {
			for _, e := range x.Holders {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LastUpdated != 0 {
			n += 1 + runtime.Sov(uint64(x.LastUpdated))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TotalCount != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalCount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTopHoldersResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TotalCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalCount))
			i--
			dAtA[i] = 0x28
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x20
		}
		if x.LastUpdated != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastUpdated))
			i--
			dAtA[i] = 0x18
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Holders) > 0 {
			for iNdEx := len(x.Holders) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Holders[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTopHoldersResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTopHoldersResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTopHoldersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Holders", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Holders = append(x.Holders, &HolderInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Holders[len(x.Holders)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
				}
				x.LastUpdated = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastUpdated |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
				}
				x.TotalCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalCount |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryCacheStatusRequest protoreflect.MessageDescriptor
)

func init() {
	file_topholders_v1_query_proto_init()
	md_QueryCacheStatusRequest = File_topholders_v1_query_proto.Messages().ByName("QueryCacheStatusRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryCacheStatusRequest)(nil)

type fastReflection_QueryCacheStatusRequest QueryCacheStatusRequest

func (x *QueryCacheStatusRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryCacheStatusRequest)(x)
}

func (x *QueryCacheStatusRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_topholders_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryCacheStatusRequest_messageType fastReflection_QueryCacheStatusRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryCacheStatusRequest_messageType{}

type fastReflection_QueryCacheStatusRequest_messageType struct{}

func (x fastReflection_QueryCacheStatusRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryCacheStatusRequest)(nil)
}
func (x fastReflection_QueryCacheStatusRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryCacheStatusRequest)
}
func (x fastReflection_QueryCacheStatusRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryCacheStatusRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryCacheStatusRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryCacheStatusRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryCacheStatusRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryCacheStatusRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryCacheStatusRequest) New() protoreflect.Message {
	return new(fastReflection_QueryCacheStatusRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryCacheStatusRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryCacheStatusRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryCacheStatusRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryCacheStatusRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryCacheStatusRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryCacheStatusRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusRequest"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryCacheStatusRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in topholders.v1.QueryCacheStatusRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryCacheStatusRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryCacheStatusRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryCacheStatusRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryCacheStatusRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryCacheStatusRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryCacheStatusRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryCacheStatusRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryCacheStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryCacheStatusResponse               protoreflect.MessageDescriptor
	fd_QueryCacheStatusResponse_last_updated  protoreflect.FieldDescriptor
	fd_QueryCacheStatusResponse_block_height  protoreflect.FieldDescriptor
	fd_QueryCacheStatusResponse_total_holders protoreflect.FieldDescriptor
	fd_QueryCacheStatusResponse_is_updating   protoreflect.FieldDescriptor
)

func init() {
	file_topholders_v1_query_proto_init()
	md_QueryCacheStatusResponse = File_topholders_v1_query_proto.Messages().ByName("QueryCacheStatusResponse")
	fd_QueryCacheStatusResponse_last_updated = md_QueryCacheStatusResponse.Fields().ByName("last_updated")
	fd_QueryCacheStatusResponse_block_height = md_QueryCacheStatusResponse.Fields().ByName("block_height")
	fd_QueryCacheStatusResponse_total_holders = md_QueryCacheStatusResponse.Fields().ByName("total_holders")
	fd_QueryCacheStatusResponse_is_updating = md_QueryCacheStatusResponse.Fields().ByName("is_updating")
}

var _ protoreflect.Message = (*fastReflection_QueryCacheStatusResponse)(nil)

type fastReflection_QueryCacheStatusResponse QueryCacheStatusResponse

func (x *QueryCacheStatusResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryCacheStatusResponse)(x)
}

func (x *QueryCacheStatusResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_topholders_v1_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryCacheStatusResponse_messageType fastReflection_QueryCacheStatusResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryCacheStatusResponse_messageType{}

type fastReflection_QueryCacheStatusResponse_messageType struct{}

func (x fastReflection_QueryCacheStatusResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryCacheStatusResponse)(nil)
}
func (x fastReflection_QueryCacheStatusResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryCacheStatusResponse)
}
func (x fastReflection_QueryCacheStatusResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryCacheStatusResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryCacheStatusResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryCacheStatusResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryCacheStatusResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryCacheStatusResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryCacheStatusResponse) New() protoreflect.Message {
	return new(fastReflection_QueryCacheStatusResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryCacheStatusResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryCacheStatusResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryCacheStatusResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.LastUpdated != int64(0) {
		value := protoreflect.ValueOfInt64(x.LastUpdated)
		if !f(fd_QueryCacheStatusResponse_last_updated, value) {
			return
		}
	}
	if x.BlockHeight != int64(0) {
		value := protoreflect.ValueOfInt64(x.BlockHeight)
		if !f(fd_QueryCacheStatusResponse_block_height, value) {
			return
		}
	}
	if x.TotalHolders != uint32(0) {
		value := protoreflect.ValueOfUint32(x.TotalHolders)
		if !f(fd_QueryCacheStatusResponse_total_holders, value) {
			return
		}
	}
	if x.IsUpdating != false {
		value := protoreflect.ValueOfBool(x.IsUpdating)
		if !f(fd_QueryCacheStatusResponse_is_updating, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryCacheStatusResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		return x.LastUpdated != int64(0)
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		return x.BlockHeight != int64(0)
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		return x.TotalHolders != uint32(0)
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		return x.IsUpdating != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		x.LastUpdated = int64(0)
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		x.BlockHeight = int64(0)
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		x.TotalHolders = uint32(0)
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		x.IsUpdating = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryCacheStatusResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		value := x.LastUpdated
		return protoreflect.ValueOfInt64(value)
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfInt64(value)
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		value := x.TotalHolders
		return protoreflect.ValueOfUint32(value)
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		value := x.IsUpdating
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		x.LastUpdated = value.Int()
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		x.BlockHeight = value.Int()
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		x.TotalHolders = uint32(value.Uint())
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		x.IsUpdating = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		panic(fmt.Errorf("field last_updated of message topholders.v1.QueryCacheStatusResponse is not mutable"))
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		panic(fmt.Errorf("field block_height of message topholders.v1.QueryCacheStatusResponse is not mutable"))
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		panic(fmt.Errorf("field total_holders of message topholders.v1.QueryCacheStatusResponse is not mutable"))
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		panic(fmt.Errorf("field is_updating of message topholders.v1.QueryCacheStatusResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryCacheStatusResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.QueryCacheStatusResponse.last_updated":
		return protoreflect.ValueOfInt64(int64(0))
	case "topholders.v1.QueryCacheStatusResponse.block_height":
		return protoreflect.ValueOfInt64(int64(0))
	case "topholders.v1.QueryCacheStatusResponse.total_holders":
		return protoreflect.ValueOfUint32(uint32(0))
	case "topholders.v1.QueryCacheStatusResponse.is_updating":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.QueryCacheStatusResponse"))
		}
		panic(fmt.Errorf("message topholders.v1.QueryCacheStatusResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryCacheStatusResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in topholders.v1.QueryCacheStatusResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryCacheStatusResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryCacheStatusResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryCacheStatusResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryCacheStatusResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryCacheStatusResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.LastUpdated != 0 {
			n += 1 + runtime.Sov(uint64(x.LastUpdated))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.TotalHolders != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalHolders))
		}
		if x.IsUpdating {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryCacheStatusResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsUpdating {
			i--
			if x.IsUpdating {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if x.TotalHolders != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalHolders))
			i--
			dAtA[i] = 0x18
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.LastUpdated != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LastUpdated))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryCacheStatusResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryCacheStatusResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryCacheStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
				}
				x.LastUpdated = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LastUpdated |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalHolders", wireType)
				}
				x.TotalHolders = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalHolders |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsUpdating", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsUpdating = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_HolderInfo                   protoreflect.MessageDescriptor
	fd_HolderInfo_address           protoreflect.FieldDescriptor
	fd_HolderInfo_liquid_balance    protoreflect.FieldDescriptor
	fd_HolderInfo_bonded_balance    protoreflect.FieldDescriptor
	fd_HolderInfo_unbonding_balance protoreflect.FieldDescriptor
	fd_HolderInfo_total_balance     protoreflect.FieldDescriptor
	fd_HolderInfo_rank              protoreflect.FieldDescriptor
	fd_HolderInfo_module_tag        protoreflect.FieldDescriptor
)

func init() {
	file_topholders_v1_query_proto_init()
	md_HolderInfo = File_topholders_v1_query_proto.Messages().ByName("HolderInfo")
	fd_HolderInfo_address = md_HolderInfo.Fields().ByName("address")
	fd_HolderInfo_liquid_balance = md_HolderInfo.Fields().ByName("liquid_balance")
	fd_HolderInfo_bonded_balance = md_HolderInfo.Fields().ByName("bonded_balance")
	fd_HolderInfo_unbonding_balance = md_HolderInfo.Fields().ByName("unbonding_balance")
	fd_HolderInfo_total_balance = md_HolderInfo.Fields().ByName("total_balance")
	fd_HolderInfo_rank = md_HolderInfo.Fields().ByName("rank")
	fd_HolderInfo_module_tag = md_HolderInfo.Fields().ByName("module_tag")
}

var _ protoreflect.Message = (*fastReflection_HolderInfo)(nil)

type fastReflection_HolderInfo HolderInfo

func (x *HolderInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_HolderInfo)(x)
}

func (x *HolderInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_topholders_v1_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_HolderInfo_messageType fastReflection_HolderInfo_messageType
var _ protoreflect.MessageType = fastReflection_HolderInfo_messageType{}

type fastReflection_HolderInfo_messageType struct{}

func (x fastReflection_HolderInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_HolderInfo)(nil)
}
func (x fastReflection_HolderInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_HolderInfo)
}
func (x fastReflection_HolderInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_HolderInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_HolderInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_HolderInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_HolderInfo) Type() protoreflect.MessageType {
	return _fastReflection_HolderInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_HolderInfo) New() protoreflect.Message {
	return new(fastReflection_HolderInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_HolderInfo) Interface() protoreflect.ProtoMessage {
	return (*HolderInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_HolderInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_HolderInfo_address, value) {
			return
		}
	}
	if x.LiquidBalance != "" {
		value := protoreflect.ValueOfString(x.LiquidBalance)
		if !f(fd_HolderInfo_liquid_balance, value) {
			return
		}
	}
	if x.BondedBalance != "" {
		value := protoreflect.ValueOfString(x.BondedBalance)
		if !f(fd_HolderInfo_bonded_balance, value) {
			return
		}
	}
	if x.UnbondingBalance != "" {
		value := protoreflect.ValueOfString(x.UnbondingBalance)
		if !f(fd_HolderInfo_unbonding_balance, value) {
			return
		}
	}
	if x.TotalBalance != "" {
		value := protoreflect.ValueOfString(x.TotalBalance)
		if !f(fd_HolderInfo_total_balance, value) {
			return
		}
	}
	if x.Rank != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Rank)
		if !f(fd_HolderInfo_rank, value) {
			return
		}
	}
	if x.ModuleTag != "" {
		value := protoreflect.ValueOfString(x.ModuleTag)
		if !f(fd_HolderInfo_module_tag, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_HolderInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "topholders.v1.HolderInfo.address":
		return x.Address != ""
	case "topholders.v1.HolderInfo.liquid_balance":
		return x.LiquidBalance != ""
	case "topholders.v1.HolderInfo.bonded_balance":
		return x.BondedBalance != ""
	case "topholders.v1.HolderInfo.unbonding_balance":
		return x.UnbondingBalance != ""
	case "topholders.v1.HolderInfo.total_balance":
		return x.TotalBalance != ""
	case "topholders.v1.HolderInfo.rank":
		return x.Rank != uint32(0)
	case "topholders.v1.HolderInfo.module_tag":
		return x.ModuleTag != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HolderInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "topholders.v1.HolderInfo.address":
		x.Address = ""
	case "topholders.v1.HolderInfo.liquid_balance":
		x.LiquidBalance = ""
	case "topholders.v1.HolderInfo.bonded_balance":
		x.BondedBalance = ""
	case "topholders.v1.HolderInfo.unbonding_balance":
		x.UnbondingBalance = ""
	case "topholders.v1.HolderInfo.total_balance":
		x.TotalBalance = ""
	case "topholders.v1.HolderInfo.rank":
		x.Rank = uint32(0)
	case "topholders.v1.HolderInfo.module_tag":
		x.ModuleTag = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_HolderInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "topholders.v1.HolderInfo.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "topholders.v1.HolderInfo.liquid_balance":
		value := x.LiquidBalance
		return protoreflect.ValueOfString(value)
	case "topholders.v1.HolderInfo.bonded_balance":
		value := x.BondedBalance
		return protoreflect.ValueOfString(value)
	case "topholders.v1.HolderInfo.unbonding_balance":
		value := x.UnbondingBalance
		return protoreflect.ValueOfString(value)
	case "topholders.v1.HolderInfo.total_balance":
		value := x.TotalBalance
		return protoreflect.ValueOfString(value)
	case "topholders.v1.HolderInfo.rank":
		value := x.Rank
		return protoreflect.ValueOfUint32(value)
	case "topholders.v1.HolderInfo.module_tag":
		value := x.ModuleTag
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HolderInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "topholders.v1.HolderInfo.address":
		x.Address = value.Interface().(string)
	case "topholders.v1.HolderInfo.liquid_balance":
		x.LiquidBalance = value.Interface().(string)
	case "topholders.v1.HolderInfo.bonded_balance":
		x.BondedBalance = value.Interface().(string)
	case "topholders.v1.HolderInfo.unbonding_balance":
		x.UnbondingBalance = value.Interface().(string)
	case "topholders.v1.HolderInfo.total_balance":
		x.TotalBalance = value.Interface().(string)
	case "topholders.v1.HolderInfo.rank":
		x.Rank = uint32(value.Uint())
	case "topholders.v1.HolderInfo.module_tag":
		x.ModuleTag = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HolderInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.HolderInfo.address":
		panic(fmt.Errorf("field address of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.liquid_balance":
		panic(fmt.Errorf("field liquid_balance of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.bonded_balance":
		panic(fmt.Errorf("field bonded_balance of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.unbonding_balance":
		panic(fmt.Errorf("field unbonding_balance of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.total_balance":
		panic(fmt.Errorf("field total_balance of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.rank":
		panic(fmt.Errorf("field rank of message topholders.v1.HolderInfo is not mutable"))
	case "topholders.v1.HolderInfo.module_tag":
		panic(fmt.Errorf("field module_tag of message topholders.v1.HolderInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_HolderInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "topholders.v1.HolderInfo.address":
		return protoreflect.ValueOfString("")
	case "topholders.v1.HolderInfo.liquid_balance":
		return protoreflect.ValueOfString("")
	case "topholders.v1.HolderInfo.bonded_balance":
		return protoreflect.ValueOfString("")
	case "topholders.v1.HolderInfo.unbonding_balance":
		return protoreflect.ValueOfString("")
	case "topholders.v1.HolderInfo.total_balance":
		return protoreflect.ValueOfString("")
	case "topholders.v1.HolderInfo.rank":
		return protoreflect.ValueOfUint32(uint32(0))
	case "topholders.v1.HolderInfo.module_tag":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: topholders.v1.HolderInfo"))
		}
		panic(fmt.Errorf("message topholders.v1.HolderInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_HolderInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in topholders.v1.HolderInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_HolderInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HolderInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_HolderInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_HolderInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*HolderInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LiquidBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BondedBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.UnbondingBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TotalBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Rank != 0 {
			n += 1 + runtime.Sov(uint64(x.Rank))
		}
		l = len(x.ModuleTag)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*HolderInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ModuleTag) > 0 {
			i -= len(x.ModuleTag)
			copy(dAtA[i:], x.ModuleTag)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ModuleTag)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Rank != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Rank))
			i--
			dAtA[i] = 0x30
		}
		if len(x.TotalBalance) > 0 {
			i -= len(x.TotalBalance)
			copy(dAtA[i:], x.TotalBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TotalBalance)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.UnbondingBalance) > 0 {
			i -= len(x.UnbondingBalance)
			copy(dAtA[i:], x.UnbondingBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UnbondingBalance)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.BondedBalance) > 0 {
			i -= len(x.BondedBalance)
			copy(dAtA[i:], x.BondedBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BondedBalance)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.LiquidBalance) > 0 {
			i -= len(x.LiquidBalance)
			copy(dAtA[i:], x.LiquidBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LiquidBalance)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*HolderInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HolderInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HolderInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LiquidBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LiquidBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BondedBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BondedBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbondingBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnbondingBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rank", wireType)
				}
				x.Rank = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Rank |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ModuleTag", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ModuleTag = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: topholders/v1/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryTopHoldersRequest is the request type for the Query/TopHolders RPC method.
type QueryTopHoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination defines an optional pagination for the request.
	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryTopHoldersRequest) Reset() {
	*x = QueryTopHoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topholders_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTopHoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTopHoldersRequest) ProtoMessage() {}

// Deprecated: Use QueryTopHoldersRequest.ProtoReflect.Descriptor instead.
func (*QueryTopHoldersRequest) Descriptor() ([]byte, []int) {
	return file_topholders_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTopHoldersRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryTopHoldersResponse is the response type for the Query/TopHolders RPC method.
type QueryTopHoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// holders contains the list of top token holders
	Holders []*HolderInfo `protobuf:"bytes,1,rep,name=holders,proto3" json:"holders,omitempty"`
	// pagination defines the pagination in the response.
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// last_updated is the timestamp when the data was last updated
	LastUpdated int64 `protobuf:"varint,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// block_height is the block height when the data was last updated
	BlockHeight int64 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// total_count is the total number of holders in the cache
	TotalCount uint32 `protobuf:"varint,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *QueryTopHoldersResponse) Reset() {
	*x = QueryTopHoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topholders_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTopHoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTopHoldersResponse) ProtoMessage() {}

// Deprecated: Use QueryTopHoldersResponse.ProtoReflect.Descriptor instead.
func (*QueryTopHoldersResponse) Descriptor() ([]byte, []int) {
	return file_topholders_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTopHoldersResponse) GetHolders() []*HolderInfo {
	if x != nil {
		return x.Holders
	}
	return nil
}

func (x *QueryTopHoldersResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *QueryTopHoldersResponse) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *QueryTopHoldersResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *QueryTopHoldersResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// QueryCacheStatusRequest is the request type for the Query/CacheStatus RPC method.
type QueryCacheStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryCacheStatusRequest) Reset() {
	*x = QueryCacheStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topholders_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCacheStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCacheStatusRequest) ProtoMessage() {}

// Deprecated: Use QueryCacheStatusRequest.ProtoReflect.Descriptor instead.
func (*QueryCacheStatusRequest) Descriptor() ([]byte, []int) {
	return file_topholders_v1_query_proto_rawDescGZIP(), []int{2}
}

// QueryCacheStatusResponse is the response type for the Query/CacheStatus RPC method.
type QueryCacheStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// last_updated is the timestamp when the cache was last updated
	LastUpdated int64 `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// block_height is the block height when the cache was last updated
	BlockHeight int64 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// total_holders is the total number of holders in the cache
	TotalHolders uint32 `protobuf:"varint,3,opt,name=total_holders,json=totalHolders,proto3" json:"total_holders,omitempty"`
	// is_updating indicates if a cache update is currently in progress
	IsUpdating bool `protobuf:"varint,4,opt,name=is_updating,json=isUpdating,proto3" json:"is_updating,omitempty"`
}

func (x *QueryCacheStatusResponse) Reset() {
	*x = QueryCacheStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topholders_v1_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCacheStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCacheStatusResponse) ProtoMessage() {}

// Deprecated: Use QueryCacheStatusResponse.ProtoReflect.Descriptor instead.
func (*QueryCacheStatusResponse) Descriptor() ([]byte, []int) {
	return file_topholders_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryCacheStatusResponse) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *QueryCacheStatusResponse) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *QueryCacheStatusResponse) GetTotalHolders() uint32 {
	if x != nil {
		return x.TotalHolders
	}
	return 0
}

func (x *QueryCacheStatusResponse) GetIsUpdating() bool {
	if x != nil {
		return x.IsUpdating
	}
	return false
}

// HolderInfo represents information about a token holder
type HolderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is the account address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// liquid_balance is the liquid token balance
	LiquidBalance string `protobuf:"bytes,2,opt,name=liquid_balance,json=liquidBalance,proto3" json:"liquid_balance,omitempty"`
	// bonded_balance is the bonded/delegated token balance
	BondedBalance string `protobuf:"bytes,3,opt,name=bonded_balance,json=bondedBalance,proto3" json:"bonded_balance,omitempty"`
	// unbonding_balance is the unbonding token balance
	UnbondingBalance string `protobuf:"bytes,4,opt,name=unbonding_balance,json=unbondingBalance,proto3" json:"unbonding_balance,omitempty"`
	// total_balance is the total token balance (liquid + bonded + unbonding)
	TotalBalance string `protobuf:"bytes,5,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	// rank is the holder's rank by total balance
	Rank uint32 `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	// module_tag is an optional tag for module addresses
	ModuleTag string `protobuf:"bytes,7,opt,name=module_tag,json=moduleTag,proto3" json:"module_tag,omitempty"`
}

func (x *HolderInfo) Reset() {
	*x = HolderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topholders_v1_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HolderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolderInfo) ProtoMessage() {}

// Deprecated: Use HolderInfo.ProtoReflect.Descriptor instead.
func (*HolderInfo) Descriptor() ([]byte, []int) {
	return file_topholders_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *HolderInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HolderInfo) GetLiquidBalance() string {
	if x != nil {
		return x.LiquidBalance
	}
	return ""
}

func (x *HolderInfo) GetBondedBalance() string {
	if x != nil {
		return x.BondedBalance
	}
	return ""
}

func (x *HolderInfo) GetUnbondingBalance() string {
	if x != nil {
		return x.UnbondingBalance
	}
	return ""
}

func (x *HolderInfo) GetTotalBalance() string {
	if x != nil {
		return x.TotalBalance
	}
	return ""
}

func (x *HolderInfo) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *HolderInfo) GetModuleTag() string {
	if x != nil {
		return x.ModuleTag
	}
	return ""
}

var File_topholders_v1_query_proto protoreflect.FileDescriptor

var file_topholders_v1_query_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x6f, 0x70,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x6f, 0x70, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x02, 0x0a,
	0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x70, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x70, 0x68,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa6,
	0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xf5, 0x02, 0x0a, 0x0a, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x44, 0x0a, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde,
	0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x62, 0x6f, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d,
	0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x62,
	0x6f, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x11,
	0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x10, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1d, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x32,
	0x8e, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x7f, 0x0a, 0x0a, 0x54, 0x6f, 0x70,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x70,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x70, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x6f, 0x70, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x0b, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x70,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0xa1, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x6f, 0x70, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x54, 0x6f, 0x70, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x54, 0x6f, 0x70, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x54, 0x6f, 0x70, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_topholders_v1_query_proto_rawDescOnce sync.Once
	file_topholders_v1_query_proto_rawDescData = file_topholders_v1_query_proto_rawDesc
)

func file_topholders_v1_query_proto_rawDescGZIP() []byte {
	file_topholders_v1_query_proto_rawDescOnce.Do(func() {
		file_topholders_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_topholders_v1_query_proto_rawDescData)
	})
	return file_topholders_v1_query_proto_rawDescData
}

var file_topholders_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_topholders_v1_query_proto_goTypes = []interface{}{
	(*QueryTopHoldersRequest)(nil),   // 0: topholders.v1.QueryTopHoldersRequest
	(*QueryTopHoldersResponse)(nil),  // 1: topholders.v1.QueryTopHoldersResponse
	(*QueryCacheStatusRequest)(nil),  // 2: topholders.v1.QueryCacheStatusRequest
	(*QueryCacheStatusResponse)(nil), // 3: topholders.v1.QueryCacheStatusResponse
	(*HolderInfo)(nil),               // 4: topholders.v1.HolderInfo
	(*v1beta1.PageRequest)(nil),      // 5: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),     // 6: cosmos.base.query.v1beta1.PageResponse
}
var file_topholders_v1_query_proto_depIdxs = []int32{
	5, // 0: topholders.v1.QueryTopHoldersRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	4, // 1: topholders.v1.QueryTopHoldersResponse.holders:type_name -> topholders.v1.HolderInfo
	6, // 2: topholders.v1.QueryTopHoldersResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	0, // 3: topholders.v1.Query.TopHolders:input_type -> topholders.v1.QueryTopHoldersRequest
	2, // 4: topholders.v1.Query.CacheStatus:input_type -> topholders.v1.QueryCacheStatusRequest
	1, // 5: topholders.v1.Query.TopHolders:output_type -> topholders.v1.QueryTopHoldersResponse
	3, // 6: topholders.v1.Query.CacheStatus:output_type -> topholders.v1.QueryCacheStatusResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_topholders_v1_query_proto_init() }
func file_topholders_v1_query_proto_init() {
	if File_topholders_v1_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_topholders_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTopHoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topholders_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTopHoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topholders_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCacheStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topholders_v1_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCacheStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topholders_v1_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HolderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topholders_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_topholders_v1_query_proto_goTypes,
		DependencyIndexes: file_topholders_v1_query_proto_depIdxs,
		MessageInfos:      file_topholders_v1_query_proto_msgTypes,
	}.Build()
	File_topholders_v1_query_proto = out.File
	file_topholders_v1_query_proto_rawDesc = nil
	file_topholders_v1_query_proto_goTypes = nil
	file_topholders_v1_query_proto_depIdxs = nil
}
